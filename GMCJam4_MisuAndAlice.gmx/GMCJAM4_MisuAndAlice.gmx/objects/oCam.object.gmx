<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE VARIABLES
a=0
b=0
x = 940
y = 800
z = 0
dir=0
ang=8
len=24
rot=0
atk=0
spd = 0.3
hsp = 0
vsp = 0
dsp = 0
jsp = 1
jump=0
grav=0.2
knok=0
push=0
life=8
stun=0
frame=0
swingx=0
swingy=0
active=1
zheight=0

global.SAIL=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MAKING A GAME
m3d_start()
d3d_set_hidden(1)
d3d_set_culling(0)
/////////////MODELS////////////////////////
globalvar land,monkey,monkey2,monkey3,monkey4,monkey5,monkey6,boat,tree1,pot,stone;
//sea = m3d_model_create()
piso = m3d_model_create()
tree1 = m3d_model_create();
gras1 = m3d_model_create();
stone = m3d_model_create();
pot = m3d_model_create();
tree(tree1,0,0,8,32,28,12);

terra[0,0] = m3d_model_create();
terra[0,1] = m3d_model_create();
terra[1,0] = m3d_model_create();
terra[1,1] = m3d_model_create();
//////////MONKEY CONTENT/////////////
monk_pose()
monk_pose_2()
monk_pose_3()
monk_pose_4()
monk_pose_5()
monk_pose_6()
boat_model()

draw_set_colour(make_colour_rgb(80,25,15));
m3d_model_ellipsoid(pot,0,0,0,6,6,4,1,1,8,8)
m3d_model_ellipsoid(pot,0,0,2,3,3,1,1,1,8,8)

///////////////ISLANDS/////////////////////////
draw_set_colour(make_colour_rgb(90,100,255));
m3d_model_floor(piso,1024,1024,0,6144,6144,0,1,1,0);
//d3d_model_terrain(sea,sprite1,0,0,0,512,512,0.1,8,8,1,1);
draw_set_colour(make_colour_rgb(60,255,70))
land[0,0]=m3d_model_terrain(terra[0,0],sprite0,0,0,0,2048,2048,1,64,64,1,1);
land[0,1]=m3d_model_terrain(terra[0,1],sprite3,0,0,0,2048,2048,1,64,64,1,1);
land[1,0]=m3d_model_terrain(terra[1,0],sprite4,0,0,0,2048,2048,1,64,64,1,1);
land[1,1]=m3d_model_terrain(terra[1,1],sprite5,0,0,0,2048,2048,1,64,64,1,1);
///STONE
draw_set_colour(c_silver)
m3d_model_ellipsoid(stone,0,0,0,5,4,2,1,1,5,4)
draw_set_colour(c_white)
//////////////////////////

m3d_model_finish(piso)
m3d_model_finish(monkey)
m3d_model_finish(tree1)
m3d_model_finish(stone)
m3d_model_finish(pot)
m3d_model_finish(terra[0,0])
m3d_model_finish(terra[0,1])
m3d_model_finish(terra[1,0])
m3d_model_finish(terra[1,1])
//m3d_model_finish(sea)
/////////PLAYER CONTENT////////////
pose_0_0()
pose_0_1()
pose_0_2()
pose_0_3()
pose_0_4()
pose_0_5()
pose_0_6()
pose_attack0()
/////////////////TEXTURES//////////////////
global.tex=sprite_get_texture(tex0,0);
tex1 = sprite_get_texture(tex0,1);
tex2 = sprite_get_texture(tex0,2);
tex3 = sprite_get_texture(tex0,3);
tex4 = sprite_get_texture(tex0,4);
d3d_set_fog(1,c_aqua,64,500)//make_colour_rgb(120,130,255)
///////////////SPAWN////////////////////
spawn1()
m3d_model_finish(gras1)
global.dialogue_active =0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atk=0
active=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movements and Rotations

//dialogue lock
if (!instance_exists(oDialogue)) {

zheight = m3d_get_height(land[a,b],x,y,2048,2048,64,64,0,0,1);
var ang1 = -sign(mouse_x-(window_get_width()/2))*(mouse_x&lt;&gt;(window_get_width()/2));
var ang2 = -sign(mouse_y-(window_get_height()/2))*(mouse_y&lt;&gt;(window_get_height()/2));
//var angp = point_distance(mouse_x,mouse_y,window_get_width()/2,window_get_height()/2);
dir -= ang1*2;//(keyboard_check(vk_left)-keyboard_check(vk_right));
dir = dir mod 360
if (ang&lt;=-5) {ang=-4}
if (ang&gt;=70) {ang=69}
ang -= ((ang2*2)*(ang&gt;-5)*(ang&lt;70));//(keyboard_check(vk_up)*(ang&lt;89))-(keyboard_check(vk_down)

var kp1 = (keyboard_check(ord('W'))-keyboard_check(ord('S')))*spd;
var kp2 = (keyboard_check(ord('A'))-keyboard_check(ord('D')))*spd;

if !abs(kp2)
{
hsp = lengthdir_x(kp1,-dir);
vsp = lengthdir_y(kp1,-dir);
}
else
{
hsp = lengthdir_x(kp2,-dir+(90));
vsp = lengthdir_y(kp2,-dir+(90));
}

}
//////////////////PHYSICS////////////////////////////
if (dsp&lt;8) dsp-=grav
if (z+dsp &lt; zheight)
{
 while(z-1 &gt; zheight)
 {
  z-=1
 }
 jump=0
 dsp=0
 spd=0.3
 z = zheight
}
//////Jump//////
////////////////

//dialogue lock
if (!instance_exists(oDialogue)) {

 if (place_meeting(x+hsp,y,oSolid))
 {
  while(!place_meeting(x+(sign(hsp)*(1/10000)),y,oSolid))
  {
   x += (sign(hsp)*(1/10000));
  }
  hsp=0
 }
 if (place_meeting(x,y+vsp,oSolid))
 {
  while(!place_meeting(x,y+(sign(vsp)*(1/10000)),oSolid))
  {
   y += (sign(vsp)*(1/10000));
  }
  vsp=0
 }
 x-=hsp
 y-=vsp
 z+=dsp

/////////////////////////////////////////////////////
window_mouse_set(window_get_width()/2,window_get_height()/2)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Other stuff
var aka = mouse_check_button_pressed(mb_left);
if (aka &amp;&amp; active)
{
 atk=1
 active=0
  swingx=-45
 swingy=-135
 alarm[1]=10
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m3d_model_destroy(boat)
//m3d_model_destroy(sea)
m3d_model_destroy(piso)
m3d_model_destroy(gras1)
m3d_model_destroy(tree1)
m3d_model_destroy(stone)
m3d_model_destroy(pot)
m3d_model_destroy(monkey)
m3d_model_destroy(monkey2)
m3d_model_destroy(monkey3)
m3d_model_destroy(monkey4)
m3d_model_destroy(monkey5)
m3d_model_destroy(monkey6)
m3d_model_destroy(houses)
m3d_model_destroy(terra[0,0])
m3d_model_destroy(terra[0,1])
m3d_model_destroy(terra[1,0])
m3d_model_destroy(terra[1,1])

pose_clear()
buffer_delete(land[0,0])
buffer_delete(land[0,1])
buffer_delete(land[1,0])
buffer_delete(land[1,1])
m3d_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw 2D GUI here
draw_text(4,4,"X: "+string(x)+"  Y: "+string(y))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m3d_set_projection(0,x,y,z+9,dir,ang,len,0,0,1,60,800/450,1,1000)
shader_set(shd_depth)
rim(x,y,1.0,500.0,-1,128,165,255,1)
m3d_model_draw(piso,0,0,4,0,0,0,1,1,1,global.tex,1)
m3d_model_draw(terra[a,b],0,0,0,0,0,0,1,1,1,global.tex,1)
m3d_model_draw(houses,0,0,0,0,0,0,1,1,1,global.tex,1)

with(oBoat){m3d_model_draw(boat,boatx,boaty,4,0,0,-dir,1,1,1,global.tex,1)}

rim(x,y,1.0,500.0,1,128,165,255,1)
if (keyboard_check(ord('W'))||keyboard_check(ord('S')))
{
if (keyboard_check(ord('W'))) frame+=0.25
if (keyboard_check(ord('S'))) frame-=0.25
frame = frame mod 6;
if frame&lt;0 frame=5
m3d_model_draw(test[floor(frame)],x,y,z+1,0,0,-dir+180,1,1,1,global.tex,1);
body()
}
else
{
if (atk)
{
 pose_draw()
 body()
}
else
{
frame=0
m3d_model_draw(pose0,x,y,z+1,0,0,-dir+180,1,1,1,global.tex,1);
rim(x,y,1.0,500.0,-1,128,165,255,1)
body()
}
}
with(oMonky){m3d_model_draw(frame[floor(nn)],x,y,z,0,0,dir+180,1,1,1,global.tex,1)}
//////////////////////Trees and other stuff/////////////////////
rim(x,y,1.0,500.0,-1,128,165,255,1)
with(oTree) {m3d_model_draw(tree1,x,y,tz-1,0,0,0,1,1,1,global.tex,1)}
with(oStone){m3d_model_draw(stone,x,y,tz,0,0,0,1,1,1,global.tex,1)}
rim(x,y,1.0,500.0,1,128,165,255,1)
with(oPot) {m3d_model_draw(pot,x,y,tz+2,0,0,0,1,1,1,global.tex,1)}

////Leave this last
m3d_model_draw(gras1,0,0,-1,0,0,0,1,1,1,tex1,1)
shader_reset()
///////////////////////RESET FOG///////////////////////////////
//d3d_set_fog(1,make_colour_rgb(90,100,255),64,500)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Makes a dummy dialogue
// you can use the code below to actually setup the dialogue, I guess?
if global.dialogue_active == 0
{
dialogue_create("Hello, world!", "This is multiline#dialogue text", "That's it for a dummy dialogue for now, isn't it?");
global.dialogue_active = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
