<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_me</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE VARIABLES
GOAL=0
a=0
b=0
x = 940
y = 850
//////////////
//x = -8000+420;
//y = 0+540;
//////////////
z = 0
dir=0
ang=8
len=24
rot=0
atk=0
spd = 0.5
hsp = 0
vsp = 0
dsp = 0
jsp = 1
jump=0
grav=0.2
knok=0
push=0
life=8
stun=0
frame=0
swingx=0
swingy=0
active=1
zheight=0
global.DUNGEON=0
global.onboard=0
global.SAIL=0
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// MAKING A GAME
m3d_start()
d3d_set_hidden(1)
d3d_set_culling(0)
draw_set_font(font0)
audio_play_sound(ms_jollyland,1,1)
/////////////MODELS////////////////////////
globalvar land,monkey,monkey2,monkey3,monkey4,monkey5,monkey6,boat,tree1,pot,stone,cloud,ball;
piso = m3d_model_create()
tree1 = m3d_model_create();
gras1 = m3d_model_create();
stone = m3d_model_create();
pot = m3d_model_create();
roy = d3d_model_create();
ball = m3d_model_create();
antiroy=d3d_model_create();
tree(tree1,0,0,8,32,28,12);
cloud_model()
terra[0,0] = m3d_model_create();
//terra[0,1] = m3d_model_create();
//terra[1,0] = m3d_model_create();
//terra[1,1] = m3d_model_create();
//////////MONKEY CONTENT/////////////
monk_pose()
monk_pose_2()
monk_pose_3()
monk_pose_4()
monk_pose_5()
monk_pose_6()
boat_model()

d3d_model_ellipsoid(roy,-4,-4,4,4,4,-4,1,1,16);
d3d_model_ellipsoid(antiroy,-4,-4,4,4,4,-4,1,1,16);
draw_set_colour(255)
m3d_model_ellipsoid(ball,0,0,0,4,4,5,1,1,12,12)
m3d_model_ellipsoid(ball,0,0,-3.95,0.5,0.5,0.1,1,1,12,12)
draw_set_colour(make_colour_rgb(80,25,15));
m3d_model_ellipsoid(pot,0,0,0,6,6,4,1,1,8,8)
m3d_model_ellipsoid(pot,0,0,2,3,3,1,1,1,8,8)

///////////////ISLANDS/////////////////////////
draw_set_colour(make_colour_rgb(90,100,255));
m3d_model_floor(piso,-1024,-1024,0,5120,5120,0,1,1,0);
//d3d_model_terrain(sea,sprite1,0,0,0,512,512,0.1,8,8,1,1);

draw_set_colour(c_white)

land[0,0]=m3d_model_terrain(terra[0,0],sprite0,0,0,0,2048,2048,1,64,64,1,1);
//land[0,1]=m3d_model_terrain(terra[0,1],sprite3,0,0,0,2048,2048,1,64,64,1,1);
//land[1,0]=m3d_model_terrain(terra[1,0],sprite4,0,0,0,2048,2048,1,64,64,1,1);
//land[1,1]=m3d_model_terrain(terra[1,1],sprite5,0,0,0,2048,2048,1,64,64,1,1);

///STONE
draw_set_colour(c_silver)
m3d_model_ellipsoid(stone,0,0,0,5,4,2,1,1,5,4)
draw_set_colour(c_white)
/////////////DUNGEONS///////////////
dungeon1_create()
m3d_model_finish(ball)
m3d_model_finish(piso)
m3d_model_finish(monkey)
m3d_model_finish(tree1)
m3d_model_finish(stone)
m3d_model_finish(pot)
m3d_model_finish(terra[0,0])
//m3d_model_finish(terra[0,1])
//m3d_model_finish(terra[1,0])
//m3d_model_finish(terra[1,1])
//m3d_model_finish(sea)
/////////PLAYER CONTENT////////////
pose_0_0()
pose_0_1()
pose_0_2()
pose_0_3()
pose_0_4()
pose_0_5()
pose_0_6()
pose_attack0()
/////////////////TEXTURES//////////////////
global.tex=sprite_get_texture(tex0,0);
tex1 = sprite_get_texture(tex0,1);
tex2 = sprite_get_texture(tex0,2);
tex3 = sprite_get_texture(tex0,3);
tex4 = sprite_get_texture(tex0,4);
d3d_set_fog(1,make_colour_rgb(91,169,255),64,500)//make_colour_rgb(120,130,255)
///////////////SPAWN////////////////////
spawn1()
m3d_model_finish(gras1)
global.dialogue_active =0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>atk=0
active=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stun=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movements and Rotations
//dialogue lock
if (!instance_exists(oDialogue)) {

var _mx, _my, _mousew, _mouseh;
var _hsense = 0.25;
var _vsense = 0.25;
if (window_get_fullscreen())
{
_mx = display_mouse_get_x();
_my = display_mouse_get_y();
_mousew = display_get_width();
_mouseh = display_get_height();
}
else
{
_mx = window_mouse_get_x();
_my = window_mouse_get_y();
_mousew = window_get_width();
_mouseh = window_get_height();
}
if (keyboard_check_pressed(ord('M'))) show_debug_message(string(_mousew) + "," + string(_mouseh));

zheight = m3d_get_height(land[0,0],x,y,2048,2048,64,64,0,0,1);

// horizontal rotation
dir += clamp(_hsense * (_mx - _mousew/2), -15, 15);
dir += 360;
dir = dir mod 360;

// vertical rotation
ang = clamp(ang + _vsense * (_my - _mouseh/2), -5, 70);
var kp1 = (keyboard_check(ord('W'))-keyboard_check(ord('S')))*spd;
var kp2 = (keyboard_check(ord('A'))-keyboard_check(ord('D')))*spd;

if !abs(kp2*(1-global.onboard))
{
hsp = lengthdir_x(kp1,-dir);
vsp = lengthdir_y(kp1,-dir);
}
else
{
hsp = lengthdir_x(kp2*(1-global.onboard),-dir+(90));
vsp = lengthdir_y(kp2*(1-global.onboard),-dir+(90));
}

}

//////////////////PHYSICS////////////////////////////
if (global.onboard==0)
{
if (dsp&lt;8) dsp-=grav
if (z+dsp &lt; zheight)
{
 while(z-1 &gt; zheight)
 {
  z-=1
 }
 jump=0
 dsp=0
 spd=0.5
 z = zheight
}}else{z=4}
//////Jump//////
////////////////

//dialogue lock
if (!instance_exists(oDialogue)) {
if (global.onboard==0)
{
var checkerx = m3d_get_height(land[0,0],x-hsp,y,2048,2048,64,64,0,0,1);
var checkery = m3d_get_height(land[0,0],x,y-vsp,2048,2048,64,64,0,0,1);
 if checkerx&lt;=0//(place_meeting(x-hsp,y,oSolid))&amp;&amp;(checker
 {
  while(m3d_get_height(land[0,0],x-(sign(hsp)*(1/10000)),y,2048,2048,64,64,0,0,1)&gt;0)//(!place_meeting(x-(sign(hsp)*(1/10000)),y,oSolid)&amp;&amp;)
  {
   x -= (sign(hsp)*(1/10000));
  }
  hsp=0
 }
 if (checkery&lt;=0)//(place_meeting(x,y-vsp,oSolid))
 {
  while(m3d_get_height(land[0,0],x,y-(sign(vsp)*(1/10000)),2048,2048,64,64,0,0,1)&gt;0)//!place_meeting(x,y-(sign(vsp)*(1/10000)),oSolid))
  {
   y -= (sign(vsp)*(1/10000));
  }
  vsp=0
 }
}
else
{
if (x&gt;4)&amp;&amp;(x&lt;2048)&amp;&amp;(y&gt;4)&amp;&amp;(y&lt;2048){
var checkerx = m3d_get_height(land[0,0],x-hsp,y,2048,2048,64,64,0,0,1);
var checkery = m3d_get_height(land[0,0],x,y-vsp,2048,2048,64,64,0,0,1);
 if checkerx&gt;0//(place_meeting(x-hsp,y,oSolid))&amp;&amp;(checker
 {
  while(m3d_get_height(land[0,0],x-(sign(hsp)*(1/10000)),y,2048,2048,64,64,0,0,1)&lt;=0)//(!place_meeting(x-(sign(hsp)*(1/10000)),y,oSolid)&amp;&amp;)
  {
   x -= (sign(hsp)*(1/10000));
  }
  hsp=0
 }
 if (checkery&gt;0)//(place_meeting(x,y-vsp,oSolid))
 {
  while(m3d_get_height(land[0,0],x,y-(sign(vsp)*(1/10000)),2048,2048,64,64,0,0,1)&lt;=0)//!place_meeting(x,y-(sign(vsp)*(1/10000)),oSolid))
  {
   y -= (sign(vsp)*(1/10000));
  }
  vsp=0
 }
}}
 x-=hsp
 y-=vsp
 z+=dsp

/////////////////////////////////////////////////////
if (window_get_fullscreen()) display_mouse_set(_mousew/2,_mouseh/2)
else window_mouse_set(_mousew/2, _mouseh/2);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Interact with NPC's
///Boat
var bx=oBoat.x;
var by=oBoat.y;
if point_distance_3d(x,y,z+10,bx,by,6)&lt;32
{
 if mouse_check_button_pressed(mb_left)
 {
  if (global.SAIL)
  {
   //get in the boat
   x = oBoat.x;
   y = oBoat.y;
   global.onboard=1
   spd=1;
  }
  else
  {
  if global.dialogue_active == 0
  {
   dialogue_create("...", "... ...", "... - Luke Skywalker");
   global.dialogue_active = 1
  }
  }
 }
 if (x&gt;4)&amp;&amp;(x&lt;2048)&amp;&amp;(y&gt;4)&amp;&amp;(y&lt;2048){if (mouse_check_button_pressed(mb_right) &amp;&amp; global.onboard)
 {if (collision_radio()){global.onboard=0; spd=0.5}}}
}
if point_distance(x,y,1000,1000)&lt;16
{
 if mouse_check_button_pressed(mb_left)
 {
  if (global.SAIL)
   {
    if (GOAL)
    {
       if global.dialogue_active == 0
       {
        dialogue_create("YOU DID IT!", "...", "There is nothing left for youy to do. Go now!");
         global.dialogue_active = 1
       }
    }
    if GOAL==0
    {
     if global.dialogue_active == 0
     {
      dialogue_create("Not enough balloons!", "Keep looking for more!", "Dont give up now!");
      global.dialogue_active = 1
     }
    }
   }
   else
   {
  if global.dialogue_active == 0
  {
   dialogue_create("Oh no! All my balloons are gone for the Jersey's annual meme festival later.", "You! Can you go to the ocean and find them for me?", "Its just 30 of them scattered! Quick go get them!");
   global.dialogue_active = 1; global.SAIL=1; spawn2()
  }
  }
  }
  }
 if point_distance(x,y,1075,975)&lt;16
{
 if mouse_check_button_pressed(mb_left)
 {
  if global.dialogue_active == 0
       {
        dialogue_create("Dont mind the monkey", "he just like chasing everyone.", "He'll even swim after you.");
         global.dialogue_active = 1
       }
 }
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Other stuff
if (!global.dialogue_active)
{
var aka = mouse_check_button_pressed(mb_left);
if (aka &amp;&amp; active)
{
 atk=1
 active=0
  swingx=-45
 swingy=-135
 alarm[1]=10
}
if instance_number(oBalloon)==0 &amp;&amp; global.SAIL {GOAL=1}
if (global.DUNGEON==0)
{
//if (x&gt;4)&amp;&amp;(x&lt;4092){if (y&gt;4)&amp;&amp;(y&lt;4092){a=floor(x/2048); b=floor(y/2048)}}
if x&gt;4096 {x=1}
if x&lt;0 {x=4095}
if y&gt;4096 {y=1}
if y&lt;0 {y=4095}
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m3d_model_destroy(boat)
audio_stop_all()
d3d_model_clear(roy)
d3d_model_destroy(roy)
d3d_model_clear(antiroy)
d3d_model_destroy(antiroy)
m3d_model_destroy(ball)
m3d_model_destroy(piso)
m3d_model_destroy(gras1)
m3d_model_destroy(tree1)
m3d_model_destroy(stone)
m3d_model_destroy(pot)
m3d_model_destroy(monkey)
m3d_model_destroy(monkey2)
m3d_model_destroy(monkey3)
m3d_model_destroy(monkey4)
m3d_model_destroy(monkey5)
m3d_model_destroy(monkey6)
m3d_model_destroy(houses)
m3d_model_destroy(cloud)
m3d_model_destroy(terra[0,0])
//m3d_model_destroy(terra[0,1])
//m3d_model_destroy(terra[1,0])
//m3d_model_destroy(terra[1,1])
//m3d_model_destroy(dungeon1)
//surface_free(sf)
pose_clear()
buffer_delete(land[0,0])
//buffer_delete(land[0,1])
//buffer_delete(land[1,0])
//buffer_delete(land[1,1])
m3d_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw 2D GUI here
draw_text(4,4,"X: "+string(x)+"  Y: "+string(y))
if global.SAIL draw_text(400,4,"Balloons: "+string(instance_number(oBalloon)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>m3d_set_projection(0,x,y,z+9,dir,ang,len,0,0,1,70,800/450,1,1000)
shader_set(shd_depth)
rim(x,y,1.0,500.0,-1,128,165,255,1)
m3d_model_draw(piso,0,0,4,0,0,0,1,1,1,global.tex,1)
m3d_model_draw(terra[0,0],0,0,0,0,0,0,1,1,1,global.tex,1)
m3d_model_draw(houses,0,0,0,0,0,0,1,1,1,global.tex,1)
with(oBalloon){m3d_model_draw(ball,x,y,9,0,0,0,1,1,1,global.tex,1)}
var tz = m3d_get_height(land[0,0],1000,1000,2048,2048,1,1,0,0,1);
d3d_transform_set_identity()
d3d_transform_add_rotation_z(point_direction(1000,1000,x,y)+180)
d3d_transform_add_translation(1000,1000,tz+12)
d3d_model_draw(roy,0,0,0,tex3)
d3d_transform_set_identity()
d3d_transform_set_identity()
d3d_transform_add_rotation_z(point_direction(1075,975,x,y)+180)
tz = m3d_get_height(land[0,0],1075,975,2048,2048,1,1,0,0,1);
d3d_transform_add_translation(1075,975,tz+12)
d3d_model_draw(antiroy,0,0,0,tex2)
d3d_transform_set_identity()

with(oBoat){m3d_model_draw(boat,x,y,4,0,0,-dir,1,1,1,global.tex,1)}

rim(x,y,1.0,500.0,1,128,165,255,1)
if (keyboard_check(ord('W'))||keyboard_check(ord('S')))&amp;&amp;(global.onboard==0)
{
if (keyboard_check(ord('W'))) frame+=0.25
if (keyboard_check(ord('S'))) frame-=0.25
frame = frame mod 6;
if frame&lt;0 frame=5
m3d_model_draw(test[floor(frame)],x,y,z+1,0,0,-dir+180,1,1,1,global.tex,1);
body()
}
else
{
if (atk)
{
 pose_draw()
 body()
}
else
{
frame=0
m3d_model_draw(pose0,x,y,z+1,0,0,-dir+180,1,1,1,global.tex,1);
rim(x,y,1.0,500.0,-1,128,165,255,1)
body()
}
}
with(oMonky){m3d_model_draw(frame[floor(nn)],x,y,z,0,0,dir+180,1,1,1,global.tex,1)}
//////////////////////Trees and other stuff/////////////////////
rim(x,y,1.0,500.0,-1,128,165,255,1)
with(oTree) {m3d_model_draw(tree1,x,y,tz-1,0,0,0,1,1,1,global.tex,1)}
with(oStone){m3d_model_draw(stone,x,y,tz+1,0,0,0,1,1,1,global.tex,1)}
rim(x,y,1.0,500.0,1,128,165,255,1)
with(oPot) {m3d_model_draw(pot,x,y,tz+2,0,0,0,1,1,1,global.tex,1)}
/////////////////DUNGEON//////////////
m3d_model_draw(dungeon1,0,0,0,0,0,0,1,1,1,global.tex,1)
////Leave this last
m3d_model_draw(gras1,0,0,-1,0,0,0,1,1,1,tex1,1)
shader_reset()
///////////////////////RESET FOG///////////////////////////////
with(oCloud){m3d_model_draw(cloud,x,y,200,0,0,0,1,1,1,global.tex,1)}
//d3d_set_fog(1,make_colour_rgb(90,100,255),64,500)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
